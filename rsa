#!/usr/bin/python3

import sys
import random
import time
import math

def is_prime(number, iterations=20):
    if number < 2:
        return False
    if number < 4:
        return True
    if number % 2 == 0:
        return False

    # Miller-Rabin primality test
    d = number - 1
    r_value = 0
    while d % 2 == 0:
        d //= 2
        r_value += 1

    for _ in range(iterations):
        a = random.randint(2, number - 2)
        x_value = pow(a, d, number)
        if x_value == 1 or x_value == number - 1:
            continue
        for _ in range(r_value - 1):
            x_value = pow(x_value, 2, number)
            if x_value == number - 1:
                break
        else:
            return False

    return True

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        exit()

    input_file_name = sys.argv[1]

    try:
        with open(input_file_name, 'r') as file:
            lines = file.readlines()
    except FileNotFoundError:
        print("File not found")
        exit()

    start_time = time.time()

    number_value = int(lines[0].strip())

    sqrt_number = int(math.isqrt(number_value)) + 1
    for i in range(2, sqrt_number):
        if number_value % i == 0 and is_prime(i) and is_prime(number_value // i):
            print(f"{number_value}={i}*{number_value//i}")
            break

    if time.time() - start_time > 5:
        print("Time limit exceeded")
        exit()

